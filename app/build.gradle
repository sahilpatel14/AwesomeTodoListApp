apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.awesometodolistapp"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        //  Tells the system to use Android Junit Runner.
        //  Essential for Instrumented tests.
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.defaultConfig.vectorDrawables.useSupportLibrary = true

    buildTypes {

        debug {
            minifyEnabled false
            useProguard false
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'buildType'
    productFlavors {
        mock {
            applicationIdSuffix ".mock"
            dimension 'buildType'
        }

        prod {
            dimension 'buildType'
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'

    implementation "android.arch.persistence.room:rxjava2:1.1.0"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    annotationProcessor "android.arch.persistence.room:compiler:1.1.0"

    //  This is the only dependency required for writing local unit tests.
    testImplementation 'junit:junit:4.12'

    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:2.18.3'

    //  for instrumented unit test, we need the following dependencies.

    //  gives us a test oriented way of accessing android framework API
    //  objects such as Context.
    androidTestImplementation 'com.android.support:support-annotations:27.1.1'
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'

    //  Runner and rules are again required for instrumented tests.
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    //  Hamcrest is useful for assertions
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
